use('test')

db.uni.drop();
db.uni.insertMany([
  {
    country : 'Spain',
    city : 'Salamanca',
    name : 'USAL',
    location : {
      type : 'Point',
      coordinates : [ -5.6722512, 17, 40.9607792 ]
    },
    students : [
      { year : 2014, number : 24774 },
      { year : 2015, number : 23166 },
      { year : 2016, number : 21913 },
      { year : 2017, number : 21715 }
    ]
  },
  {
    country : 'Spain',
    city : 'Salamanca',
    name : 'UPSA',
    location : {
      type : 'Point',
      coordinates : [ -5.6691191, 17, 40.9631732 ]
    },
    students : [
      { year : 2014, number : 4788 },
      { year : 2015, number : 4821 },
      { year : 2016, number : 6550 },
      { year : 2017, number : 6125 }
    ]
  }
]);

db.courses.drop();
db.courses.insertMany([
  {
    university : 'USAL',
    name : 'Computer Science',
    level : 'Excellent'
  },
  {
    university : 'USAL',
    name : 'Electronics',
    level : 'Intermediate'
  },
  {
    university : 'USAL',
    name : 'Communication',
    level : 'Excellent'
  }
]);

// find el. with country spain and city salamanca // aggreagtion
db.uni.aggregate([
  { $match: {
      country: { $exists: 1 },
      city: 'Salamanca'
    }
  },
  { $group: {
      _id: { c: '$country', c2: '$city'},
      studentsAmount: {
        $sum: { $size: '$students' }
      },
      sumCoordinates: {
        $sum: { $size: '$location.coordinates'}
      },
      sumCoordinate: {
        $sum: { $last: '$location.coordinates' }
      },
      avgCoordinate: {
        $avg: { $first: '$location.coordinates' }
      },
      minCoordinate: {
        $min: { $last: '$location.coordinates' }
      },
      data: {
        $push: { data: ['$country', '$city'] } // '$$ROOT'
      }
    }
  }
])


db.uni.aggregate([
  { $match: {
    name: 'USAL'
  }},
  { $unwind: '$students' },
  { $group: {
    _id: '$students.year',
    data: { $push: '$$ROOT' }
  }}
])

// SQL
// SELECT *
// FROM uni as u 
// LEFT JOIN courses as c 
// ON u.name = c.university
db.uni.aggregate([
  {
    $project: {
      location: 0,
      students: 0,
    }
  },
  {
    $lookup: {
      from: 'courses',
      localField: 'name',
      foreignField: 'university',
      as: 'courses'
    }
  },
  {
    $project: {
      'courses.university': 0
    }
  }
])

// courses -> lookup to the uni
db.courses.aggregate([
  {
    $lookup: {
      from: 'uni',
      localField: 'university',
      foreignField: 'name',
      as: 'university',
      pipeline: [
        {
          $project: {
            location: 0,
            students: 0,
          }
        }
      ]
    }
  }
])
// SELECT u.name, u.city, c.name, c.level
// FROM uni as u 
// LEFT JOIN courses as c 
// ON u.name = c.university

// inner join
db.courses.aggregate([
  {
    $lookup: {
      from: 'uni',
      localField: 'university',
      foreignField: 'name',
      as: 'university',
      pipeline: [
        {
          $project: {
            location: 0,
            students: 0,
          }
        }
      ]
    }
  },
  {
    $unwind: {
      path: '$university',
      // preserveNullAndEmptyArrays: true
    }
  }
])

db.courses.insertOne({
  name: 'Unknown',
  university: 'MIT'
})

// self-join
db.courses.aggregate([
  {
    $lookup: {
      from: 'courses',
      localField: 'name',
      foreignField: 'name',
      as: 'self'
    }
  }
])